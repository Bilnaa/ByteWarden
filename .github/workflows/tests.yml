name: Java CI with JUnit Tests

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'

    - name: Show Project Structure
      run: |
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -R

    - name: Download Dependencies
      run: |
        mkdir -p lib
        wget https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar -P lib/
        wget https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar -P lib/
        wget https://repo1.maven.org/maven2/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar -P lib/

    - name: Compile
      run: |
        mkdir -p out
        # Liste et compile les fichiers principaux
        MAIN_FILES=$(find src/Classes -name "*.java")
        if [ ! -z "$MAIN_FILES" ]; then
          echo "Compiling main files:"
          echo "$MAIN_FILES"
          javac -cp "lib/*" -d out $MAIN_FILES
        else
          echo "No main files found"
        fi
        
        # Liste et compile les fichiers de test
        TEST_FILES=$(find src/Tests -name "*.java")
        if [ ! -z "$TEST_FILES" ]; then
          echo "Compiling test files:"
          echo "$TEST_FILES"
          javac -cp "out:lib/*" -d out $TEST_FILES
        else
          echo "No test files found"
        fi

    - name: Run tests
      run: |
        # Trouve et exÃ©cute tous les tests
        TEST_CLASSES=$(find out/Tests -name "*Test.class" | sed 's/out\///' | sed 's/\.class$//' | tr '/' '.')
        if [ ! -z "$TEST_CLASSES" ]; then
          echo "Running test classes:"
          echo "$TEST_CLASSES"
          java -cp "out:lib/*" org.junit.runner.JUnitCore $TEST_CLASSES
        else
          echo "No test classes found"
        fi

    - name: Generate Test Report
      if: always()
      run: |
        echo "# Test Results" > test-report.md
        echo "\`\`\`" >> test-report.md
        TEST_CLASSES=$(find out/Tests -name "*Test.class" | sed 's/out\///' | sed 's/\.class$//' | tr '/' '.')
        if [ ! -z "$TEST_CLASSES" ]; then
          java -cp "out:lib/*" org.junit.runner.JUnitCore $TEST_CLASSES >> test-report.md 2>&1 || true
        else
          echo "No test classes found" >> test-report.md
        fi
        echo "\`\`\`" >> test-report.md

    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: test-report.md